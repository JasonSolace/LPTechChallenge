{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\lptechnologies\\\\client\\\\src\\\\pages\\\\view.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport LineChart from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Views = () => {\n  _s();\n  const [integers, setIntegers] = useState([]); //Will hold the data points from the SQL Database\n  const [count, setCount] = useState(1); //Keeps track of list of data we're on\n  const [chartData, setChartData] = useState([]); //Handles graph updates\n  const [date, setDate] = useState([]);\n  const fetchdata = () => {\n    const integerAPI = \"http://localhost:8800/data/\" + count;\n    const dateAPI = \"http://localhost:8800/date/\" + count;\n    const getInteger = axios.get(integerAPI);\n    const getDate = axios.get(dateAPI);\n    axios.all([getInteger, getDate]).then(axios.spread(function () {\n      for (var _len = arguments.length, allData = new Array(_len), _key = 0; _key < _len; _key++) {\n        allData[_key] = arguments[_key];\n      }\n      setIntegers(allData[0].data);\n      setDate(allData[1].data);\n      function createData() {\n        //This formats the data for our chart to use\n        const data = [['MHZ', 'dBM']];\n        let startingMHZ = 850;\n        for (let i = 0; i < integers.length; i++) {\n          data.push([startingMHZ, integers[i]]);\n          startingMHZ += 0.5;\n        }\n        return data;\n      }\n      setChartData(createData());\n    }));\n  };\n  useEffect(() => {\n    //Handles the updates of our variables, changing every 1 second\n    fetchdata();\n    if (count === 50) {\n      setCount(1);\n    } else {\n      setCount(count + 1);\n    }\n  }, []);\n  const options = {\n    //Chart Options that can be changed as needed.\n    title: 'LP Technologies Graph',\n    curveType: 'function',\n    legend: {\n      position: 'bottom'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: date.trace_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(LineChart, {\n      chartType: \"LineChart\",\n      data: chartData,\n      options: options,\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(Views, \"Ei6pajX7oq2ZQeuj+cYUSgHgsaA=\");\n_c = Views;\nexport default Views;\nvar _c;\n$RefreshReg$(_c, \"Views\");","map":{"version":3,"names":["React","useEffect","useState","axios","LineChart","jsxDEV","_jsxDEV","Views","_s","integers","setIntegers","count","setCount","chartData","setChartData","date","setDate","fetchdata","integerAPI","dateAPI","getInteger","get","getDate","all","then","spread","_len","arguments","length","allData","Array","_key","data","createData","startingMHZ","i","push","options","title","curveType","legend","position","children","fileName","_jsxFileName","lineNumber","columnNumber","trace_time","chartType","width","height","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/lptechnologies/client/src/pages/view.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport LineChart from 'react-google-charts'\r\n\r\nconst Views = () => {\r\n    const [integers, setIntegers] = useState([]) //Will hold the data points from the SQL Database\r\n    const [count, setCount] = useState(1); //Keeps track of list of data we're on\r\n    const [chartData, setChartData] = useState([]) //Handles graph updates\r\n    const [date, setDate] = useState([]);\r\n\r\n\r\n    const fetchdata = () => {\r\n        const integerAPI = \"http://localhost:8800/data/\" + count;\r\n        const dateAPI = \"http://localhost:8800/date/\" + count;\r\n\r\n        const getInteger = axios.get(integerAPI);\r\n        const getDate = axios.get(dateAPI);\r\n        axios.all([getInteger, getDate]).then(\r\n            axios.spread((...allData) => {\r\n                setIntegers(allData[0].data);\r\n                setDate(allData[1].data);\r\n                function createData(){ //This formats the data for our chart to use\r\n                    const data = [['MHZ', 'dBM']]\r\n                    let startingMHZ = 850;\r\n            \r\n                    for (let i = 0; i < integers.length; i++){\r\n                        data.push([startingMHZ, integers[i]])\r\n                        startingMHZ += (0.5)\r\n                    }\r\n            \r\n                    return data;\r\n                }\r\n\r\n                setChartData(createData());\r\n\r\n            })\r\n        )\r\n    }\r\n\r\n    useEffect(() => { //Handles the updates of our variables, changing every 1 second\r\n        fetchdata();\r\n        \r\n        if (count === 50){\r\n            setCount(1);\r\n        } else {\r\n            setCount(count + 1);\r\n        }\r\n    }, [])\r\n\r\n    const options = { //Chart Options that can be changed as needed.\r\n        title: 'LP Technologies Graph',\r\n        curveType: 'function',\r\n        legend: {position: 'bottom'}\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>{count}</h1>\r\n            <h3>{date.trace_time}</h3>\r\n            {chartData.length > 0 && (\r\n            <LineChart\r\n                chartType = \"LineChart\"\r\n                data = {chartData}\r\n                options = {options}\r\n                width=\"100%\"\r\n                height=\"400px\"\r\n                />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Views;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}